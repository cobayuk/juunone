<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Juunone | for dev blog</title>
    <description>juunone's dev blog.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Mar 2019 15:43:52 +0900</pubDate>
    <lastBuildDate>Mon, 04 Mar 2019 15:43:52 +0900</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>별점 평가 컴포넌트</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/juunone/star-rate&quot;&gt;별점 평가 컴포넌트&lt;/a&gt;에 가면 데모버전 확인 가능합니다.&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;목적&quot;&gt;목적&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;영화를 본 후 평점 별점 반개도 주기 아까울때.&lt;/li&gt; &lt;li&gt;웹 &amp;amp; 모바일 모두 사용 가능해야 한다.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;위 두가지 목적을 가지고 제작된 컴포넌트 입니다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;시간적 제한을 가지고 제작되어서, 코드내 잡음 주의!&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;implementation&quot;&gt;implementation&lt;/h2&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn create react-app star-rate # project tree - public - favicon.ico - index.html - src - images - reset.svg - star-empty.svg - star-full.svg - star-half.svg - App.js - StarRate.js - StarRate.css - index.css - index.js - .gitignore - README.md - package.json - yarn.lock &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;starratecss&quot;&gt;StarRate.css&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;img 태그에 css를 통해 스타일을...</description>
        <pubDate>Thu, 28 Feb 2019 19:00:00 +0900</pubDate>
        <link>/star-rate/</link>
        <guid isPermaLink="true">/star-rate/</guid>
        
        <category>browser</category>
        
        <category>reflow</category>
        
        <category>repaint</category>
        
        <category>layout</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>reflow &amp; repaint</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://juunone.github.io/browser/&quot;&gt;브라우저 동작원리&lt;/a&gt;을 보신후 이 포스팅을 보길 권장합니다.&lt;br /&gt; 웹이 렌더링 되는 과정중 reflow &amp;amp; repaint 에 대해 자세히 다루고자 한다.&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;reflow-and-repaints&quot;&gt;Reflow and Repaints&lt;/h2&gt; &lt;p&gt;페이지를 한번 표시할때 리플로우가 발생한다. 그 후,&lt;br /&gt; 렌더링 트리를 구성하는데 사용된 정보의 변화는 다음중 하나 또는 두개의 결과를 일으킨다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;렌더링 트리 일부(또는 전부)는 재 설정된 노드의 폭,높이 등이 다시 계산된다. &lt;br /&gt; &lt;ul&gt; &lt;li&gt;위 과정을 &lt;strong&gt;Reflow&lt;/strong&gt; 또는 &lt;strong&gt;Layout&lt;/strong&gt; 이라고 한다. (Webkit : layout , Gecko : reflow 라고 부른다)&lt;/li&gt; &lt;li&gt;첫 페이지는 반드시 한 번 이상 리플로우가 일어난다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;레이아웃 수치에 영향을 주지 않는, (예:색상, 아웃라인, 배경 등)은 Reflow 과정이 생략된...</description>
        <pubDate>Sun, 10 Feb 2019 21:00:00 +0900</pubDate>
        <link>/reflow-repaint/</link>
        <guid isPermaLink="true">/reflow-repaint/</guid>
        
        <category>browser</category>
        
        <category>reflow</category>
        
        <category>repaint</category>
        
        <category>layout</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>브라우저 동작 원리.</title>
        <description>&lt;p&gt;웹사이트는 어떻게 보여줄까? 웹개발자들 이라면 한번쯤 들어봤을 브라우저 렌더링 과정을&lt;br /&gt; 좀더 자세히 다뤄보고자 여러 문서들을 기반으로 포스팅을 작성하게됐다.&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;브라우저의-렌더링-과정&quot;&gt;브라우저의 렌더링 과정&lt;/h2&gt; &lt;p&gt;렌더링은 화면에 컨텐츠를 그리는 과정으로, 브라우저들은 각자의 렌더링 엔진으로 이를 구현했다. 크롬과 사파리는 “Webkit 엔진”을 사용하고, 파이어폭스는 “Gecko 엔진”을 사용한다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;브라우저 렌더링 과정&lt;/strong&gt;&lt;br /&gt; &lt;img src=&quot;http://www.phpied.com/files/reflow/render.png&quot; alt=&quot;브라우저렌더링&quot; /&gt;&lt;/p&gt; &lt;p&gt;출처 : &lt;a href=&quot;http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/&quot;&gt;http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/&lt;/a&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;불러오기(Load)&lt;br /&gt; 로더(Loader)가 서버로부터 전달 받는 리소스 스트림을 읽는 과정. 읽으면서 어떤 파일인지, 데이터인지 파일을 다운로드할 것인지 등을 결정한다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;파싱 (Parsing)&lt;br /&gt; 렌더링 엔진은 HTML/XML 문서를 파싱하고 “콘텐츠 트리” 내부에서 태그를 DOM 노드로 변환하고,&lt;br /&gt; 외부 CSS 파일을 포함하여...</description>
        <pubDate>Wed, 06 Feb 2019 19:00:00 +0900</pubDate>
        <link>/browser/</link>
        <guid isPermaLink="true">/browser/</guid>
        
        <category>browser</category>
        
        <category>reflow</category>
        
        <category>repaint</category>
        
        <category>layout</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>React application SPA with gh-pages deploy(2)</title>
        <description>&lt;p&gt;이전 &lt;a href=&quot;https://juunone.github.io/cra-ghpages/&quot;&gt;포스팅&lt;/a&gt;에서 CRA(create-react-app)을 통해 생성된 어플리케이션을 homepage에 호스팅 해봤습니다. 이번 포스팅은 해당 어플리케이션을 react-router-dom 을 통해 SPA(single application app)으로 구현하는 튜토리얼을 진행해보겠습니다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;DEMO 페이지는 &lt;a href=&quot;https://juunone.github.io/react-spa-ghpages/#/&quot; taget=&quot;_blank&quot;&gt;react-spa-ghpages&lt;/a&gt;에서 확인가능합니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;ul&gt; &lt;li&gt;리액트 라우터와 간단한 화면 구성을 위해 semantic-ui를 설치해줍니다&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:orange&quot;&gt;yarn&lt;/span&gt; add react-router-dom semantic-ui-react&lt;/code&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;프로젝트 구조는 아래와 같습니다&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|-- node_modules |-- public |-- index.html |-- favicon.ico |-- src |-- App.js |-- App.css |-- About.js |-- Home.js |-- NotFound.js |-- index.js |-- index.css |-- package.json |-- READEME.MD |-- yarn.lock &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;리액트 라우터를 App.js에 연결해주고 보여줄 컴포넌트 및 경로 설정을합니다.&lt;/li&gt; &lt;li&gt;BrowserRouter가 gh-pages 에서 정상...</description>
        <pubDate>Mon, 14 Jan 2019 06:00:00 +0900</pubDate>
        <link>/cra-ghpages2/</link>
        <guid isPermaLink="true">/cra-ghpages2/</guid>
        
        <category>React</category>
        
        <category>React-router</category>
        
        <category>gh-pages</category>
        
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>React application SPA with gh-pages deploy(1)</title>
        <description>&lt;h3&gt;리액트를 경험해본 분들을 대상으로 SPA 환경을 구축한후 gh-pages를 사용해 깃헙 레포지터리에 환경을 만드는 과정을 소개합니다. &lt;br /&gt; 구글에 해당 부분 관련해서 영문 문서 간략하게 번역 및 재해석이 들어가있습니다.&lt;br /&gt; &lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;DEMO 페이지는 &lt;a href=&quot;https://juunone.github.io/react-spa-ghpages/#/&quot; taget=&quot;_blank&quot;&gt;react-spa-ghpages&lt;/a&gt;에서 확인가능합니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;ul&gt; &lt;li&gt;create-react-app 을 통해서 어플리케이션을 만듭니다.&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:orange&quot;&gt;create-react-app&lt;/span&gt; cra-gh-pages&lt;/code&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;깃헙 저장소 생성&lt;/li&gt; &lt;li&gt;gh-pages 설치합니다. &lt;a href=&quot;https://www.npmjs.com/package/gh-pages&quot;&gt;gh-pages 확인&lt;/a&gt; &lt;ul&gt; &lt;li&gt;gh-pages는 npm 패키지로 Github에 gh-pages라는 브랜치를 생성해 파일을 게시할수있게 도와줍니다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&lt;code&gt;cd cra-gh-pages&lt;/code&gt;&lt;code&gt;&lt;span style=&quot;color:orange&quot;&gt;yarn&lt;/span&gt; add gh-pages&lt;/code&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt;CRA로 생성된 폴더에 가서 package.json 에 접근합니다. 이동할 레포지터리 이름을 hompage 코드에 추가해줍니다.&lt;/li&gt; &lt;li&gt;scripts 부분에 predeploy 및 deploy 코드를 추가합니다.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-javascript...</description>
        <pubDate>Sun, 13 Jan 2019 06:00:00 +0900</pubDate>
        <link>/cra-ghpages/</link>
        <guid isPermaLink="true">/cra-ghpages/</guid>
        
        <category>React</category>
        
        <category>React-router</category>
        
        <category>gh-pages</category>
        
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>CSS 디버깅 절약을 위한 규칙</title>
        <description>&lt;p&gt;웹은 정말 빠른 속도로 발전하고 있습니다.&lt;br /&gt; CSS는 훌륭한 &lt;strong&gt;&lt;em&gt;‘언어’&lt;/em&gt;&lt;/strong&gt;라고는 할수 없지만 빠르게 진화했습니다.&lt;/p&gt; &lt;p&gt;대규모 어플리케이션이 많아지고 그에따라 CSS 활용 범위도 넓어져가는데,&lt;br /&gt; (잘못 작성된 CSS는 디버깅하는데 헬파티를 열어준다.)&lt;br /&gt; 설계에 의미를 두지 않았던 CSS에도 다양한 방법론 생겨났습니다.&lt;/p&gt; &lt;p&gt;CSS방법론(BEM, SMACSS, OOCSS 등 더 많을수도..?) 존재하지만 이번 포스팅에서는 BEM에 관해서 적어볼까 합니다.&lt;/p&gt; &lt;p&gt;CSS 방법론은 아래와 같은 목표를 갖고 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;쉬운 유지보수&lt;/li&gt; &lt;li&gt;코드의 재사용성&lt;/li&gt; &lt;li&gt;확장성&lt;/li&gt; &lt;li&gt;클래스만으로 의미 추론&lt;/li&gt; &lt;/ul&gt; &lt;hr /&gt; &lt;h2 id=&quot;css-명명규칙을-통해서-무엇을-해결하고자-하는가&quot;&gt;CSS 명명규칙을 통해서 무엇을 해결하고자 하는가?&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;selector의 이름만 보고 role을 알 수 있다.&lt;/li&gt; &lt;li&gt;selector를 보기만 해도 어디에 사용할 수 있는지 알 수 있다.&lt;/li&gt; &lt;li&gt;클래스간의 관계는 클래스명만으로도 유추가 가능하다.&lt;/li&gt;...</description>
        <pubDate>Fri, 12 Oct 2018 06:00:00 +0900</pubDate>
        <link>/css_bem_architecture/</link>
        <guid isPermaLink="true">/css_bem_architecture/</guid>
        
        <category>CSS</category>
        
        <category>BEM</category>
        
        <category>Architecture</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>File-Manager 프로젝트 회고록</title>
        <description>&lt;h1 id=&quot;file-manager-개발정의서&quot;&gt;File-Manager 개발정의서&lt;/h1&gt; &lt;h2 id=&quot;들어가며&quot;&gt;&lt;strong&gt;들어가며&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;본 문서는 인수인계 목적이 아닌 개발이 완료된 제품에 대한 이해를 돕기위해 제작된 개발 정의서입니다.&lt;br /&gt; 부디 도움이 되길 바랄 뿐입니다. 그럼 스타뜨!&lt;/p&gt; &lt;h2 id=&quot;배경&quot;&gt;&lt;strong&gt;배경&lt;/strong&gt;&lt;/h2&gt; &lt;hr /&gt; &lt;p&gt;DCE내에서 파일 업로드 및 관리를 할수 있는 GUI 화면이 필요했다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;확장성을 보유할것&lt;/li&gt; &lt;li&gt;외부 프로젝트에서도 사용 가능할것.&lt;/li&gt; &lt;li&gt;&lt;del&gt;재밌겠다&lt;/del&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;문제정의&quot;&gt;&lt;strong&gt;문제정의&lt;/strong&gt;&lt;/h2&gt; &lt;hr /&gt; &lt;p&gt;회사내에서 사이드 프로젝트로 플러그인 형태의 파일을 관리 할 수 있는 컴포넌트가 없다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;독립되어있는 프로젝트는 의존성이 높다. (SSO 로그인 등)&lt;/li&gt; &lt;li&gt;DCE 에서 사용하는 프레임웍과 공존이 힘들다.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;예상-및-해결&quot;&gt;&lt;strong&gt;예상 및 해결&lt;/strong&gt;&lt;/h2&gt; &lt;hr /&gt; &lt;p&gt;DCE내에 소스코드가 존재할 예정이라 React 프레임웍을 사용하지만&lt;br /&gt; 형태는 jquery 플러그인처럼 외부에서 스크립트를...</description>
        <pubDate>Tue, 03 Jul 2018 21:00:00 +0900</pubDate>
        <link>/filemanager/</link>
        <guid isPermaLink="true">/filemanager/</guid>
        
        <category>React</category>
        
        <category>Plugin</category>
        
        <category>MSA</category>
        
        <category>S3</category>
        
        <category>Webpack</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>Fetch API 적응기</title>
        <description>&lt;h2 id=&quot;rest-api-connect&quot;&gt;&lt;strong&gt;REST API Connect&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;그동안의 프로젝트를 돌아보면 우리는 jquery 기반의 &lt;em&gt;AJAX&lt;/em&gt;를 사용해왔다.&lt;br /&gt; 물론 편리하고 보편화되어있고 지원되는 optional 도 많지만 현재 React app에서 최대한 jquery 영역을 좁히고있는 와중에&lt;br /&gt; 새로운 API Connenctor 인 &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/Fetch_API/Fetch%EC%9D%98_%EC%82%AC%EC%9A%A9%EB%B2%95&quot;&gt;Fetch API&lt;/a&gt;를 도입하게되었다.&lt;/p&gt; &lt;h3 id=&quot;fetch-api&quot;&gt;Fetch API&lt;/h3&gt; &lt;p&gt;위 링크를 참조로 작성한 내용입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Fetch API를 이용하면 Request나 Response와 같은 HTTP의 파이프라인을 구성하는 요소를 조작하는것이 가능합니다. 또한 fetch() 메서드를 이용하는 것으로 비동기 네트워크 통신을 알기쉽게 기술할 수 있습니다.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;jquery.ajax() 와 차이점&lt;/p&gt; &lt;ul&gt; &lt;li&gt;fetch()로 부터 반환되는 Promise 객체는 HTTP error 상태를 reject하지 않습니다. 대신 ok 상태가 false인 resolve가 반환되며, 네트워크 장애나 요청이 완료되지 못한 상태에는 reject가...</description>
        <pubDate>Sat, 12 May 2018 23:00:00 +0900</pubDate>
        <link>/fetchAPI/</link>
        <guid isPermaLink="true">/fetchAPI/</guid>
        
        <category>API</category>
        
        <category>Fetch</category>
        
        <category>REST</category>
        
        <category>RESTful</category>
        
        <category>WebAPI</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>MVC, FLUX 패턴</title>
        <description>&lt;h2 id=&quot;design-pattern&quot;&gt;&lt;strong&gt;Design pattern&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/redux2.png&quot; alt=&quot;redux&quot; title=&quot;redux&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;redux&quot;&gt;Redux?&lt;/h3&gt; &lt;p&gt;컴포넌트들끼리 데이터교류를 쉽고 효율적으로 할수 있게 도와주는 &lt;em&gt;라이브러리&lt;/em&gt;입니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;리덕스의 원대한 목표는 플럭스를 기반으로 애플리케이션안에서 &lt;strong&gt;변경된 데이터가 어떻게 흘러가는지 더명확히 표현하도록 해주는 것&lt;/strong&gt;입니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;flux&quot;&gt;Flux?&lt;/h3&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/flux-logo.png&quot; alt=&quot;flux&quot; title=&quot;flux&quot; /&gt;&lt;/p&gt; &lt;p&gt;Flux는 일종의 아이디어이다. 라이브러리나 프레임워크가 아닌 일종의 프로그래밍 &lt;em&gt;방법론&lt;/em&gt;이다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Flux 패턴은 react.js 처럼 데이터 흐름이 단방향으로 전달되는 소프트웨어 개발에서 사용된다.&lt;/li&gt; &lt;li&gt;이런 추상적인 방법론을 구현한게 Redux입니다.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;mvc&quot;&gt;MVC?&lt;/h3&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/mvc1.png&quot; alt=&quot;mvc&quot; title=&quot;mvc&quot; /&gt;&lt;/p&gt; &lt;p&gt;MVC 패턴은 &lt;em&gt;Controller, Model, View&lt;/em&gt; 이 3가지 개념으로 이뤄져있습니다. 어떠한 Action 이 입력되면, Controller은 Model이 지니고 있는 데이터를 조회하거나 업데이트 하며, 이 변화는 View 에...</description>
        <pubDate>Tue, 03 Apr 2018 07:00:00 +0900</pubDate>
        <link>/pattern/</link>
        <guid isPermaLink="true">/pattern/</guid>
        
        <category>Pattern</category>
        
        <category>MVC</category>
        
        <category>FLUX</category>
        
        <category>REDUX</category>
        
        <category>REACT</category>
        
        
        <category>webdev</category>
        
      </item>
    
      <item>
        <title>CMS 에디터툴 Dynamic contents editor : DCE 제품정의</title>
        <description>&lt;h1 id=&quot;dcedynamic-contents-editor-제품정의&quot;&gt;DCE(Dynamic contents editor) 제품정의&lt;/h1&gt; &lt;h2 id=&quot;들어가며&quot;&gt;&lt;strong&gt;들어가며&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;본 문서는 인수인계 목적이 아닌 개발이 완료된 제품에 대한 이해를 돕기위해 제작된 개발 정의서입니다.&lt;br /&gt; 부디 도움이 되길 바랄 뿐입니다. 그럼 스타뜨!&lt;/p&gt; &lt;h2 id=&quot;배경&quot;&gt;&lt;strong&gt;배경&lt;/strong&gt;&lt;/h2&gt; &lt;hr /&gt; &lt;p&gt;처음 문제는 &lt;strong&gt;&lt;em&gt;Targetbook&lt;/em&gt;&lt;/strong&gt; 으로부터 시작되었습니다.&lt;br /&gt; 문제의 배경은 광고를 집행하고 운영하는 AE 분들에 의해서 발의되었습니다.&lt;br /&gt; 이번 사례의 경우, 아래와 같이 배경이 정리 될 수 있다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;페이스북과 동일한 &lt;a href=&quot;https://www.facebook.com/business/learn/facebook-create-ad-canvas-ads&quot;&gt;캔버스&lt;/a&gt; 기능을 사용할 수 있을것&lt;/li&gt; &lt;li&gt;랜딩페이지 유입을 높이는 것&lt;/li&gt; &lt;li&gt;&lt;del&gt;재밌겠다&lt;/del&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;문제정의&quot;&gt;&lt;strong&gt;문제정의&lt;/strong&gt;&lt;/h2&gt; &lt;hr /&gt; &lt;p&gt;효과적으로 빠르게 광고 랜딩페이지 제작 목적을 띄고있는 페이스북의 &lt;a href=&quot;https://www.facebook.com/business/learn/facebook-create-ad-canvas-ads&quot;&gt;캔버스&lt;/a&gt;&lt;br /&gt; 기능이 타겟북 어드민내에 존재하지 않는다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;페이스북 캔버스 Dependency&lt;/li&gt; &lt;li&gt;기존 타겟북...</description>
        <pubDate>Thu, 08 Feb 2018 23:00:00 +0900</pubDate>
        <link>/dcedefinition/</link>
        <guid isPermaLink="true">/dcedefinition/</guid>
        
        <category>CMS</category>
        
        <category>CRM</category>
        
        <category>Landing</category>
        
        <category>Editor</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>페이스북 광고를 위한 많은 자산</title>
        <description>&lt;h2 id=&quot;비즈니스-관리자-계정&quot;&gt;비즈니스 관리자 계정&lt;/h2&gt; &lt;p&gt;비즈니스 관리자는 비즈니스를 정리하고 관리하는 데 사용할 수 있는 무료 Facebook 도구입니다. 비즈니스 관리자에 가입하면, 따로 친구 요청을 수락하지 않는 이상 동료 직원들은 Facebook 개인용 프로필을 볼 수 없습니다.&lt;/p&gt; &lt;p&gt;외부인은 비즈니스 관리자에 처음 로그인할 때 제공한 이름과 업무용 이메일 주소, 페이지 리스트 및 액세스 권한이 있는 광고 계정만 볼 수 있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/asset_business.png&quot; alt=&quot;비즈니스&quot; title=&quot;비즈니스&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;광고-계정&quot;&gt;광고 계정&lt;/h2&gt; &lt;p&gt;모든 새로운 비즈니스는 1개의 광고 계정을 만들 수 있습니다.&lt;br /&gt; 광고 계정에 지출이 있으면 최대 5개의 광고 계정을 호스팅할 수 있습니다. 현재 추가 광고 계정을 요청하는 옵션은 없습니다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;FMP(Facebook marketing partner)&lt;/strong&gt; 를 취득하게 되면 해당 비즈니스게정에 &lt;em&gt;10000&lt;/em&gt;...</description>
        <pubDate>Mon, 11 Dec 2017 21:30:00 +0900</pubDate>
        <link>/facebookAssets/</link>
        <guid isPermaLink="true">/facebookAssets/</guid>
        
        <category>Facebook</category>
        
        <category>Assets</category>
        
        <category>Facebook AD</category>
        
        
        <category>guide</category>
        
      </item>
    
      <item>
        <title>페이스북 픽셀 태깅 마스터되기</title>
        <description>&lt;h2 id=&quot;픽셀이란&quot;&gt;픽셀이란?&lt;/h2&gt; &lt;p&gt;Facebook 픽셀은 회원님의 웹사이트에서 사람들이 취한 행동을 파악하여 광고의 성과를 측정할 수 있는 분석 도구입니다.&lt;br /&gt; 픽셀 데이터를 사용하여 다음을 할 수 있습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;적절한 대상에게 광고 노출 &lt;ul&gt; &lt;li&gt;신규 고객, 웹사이트의 특정 페이지를 방문한 사람, 원하는 행동을 취한 사람 등 비즈니스에 적절한 타겟을 찾을수있고,&lt;br /&gt; 유사 타겟을 만들어 우수 고객과 유사한 타겟에 더 많이 도달하게 가능하다. &lt;a href=&quot;https://www.facebook.com/business/help/666509013483225?helpref=faq_content#&quot;&gt;자세한내용&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;광고 타겟 구축 &lt;ul&gt; &lt;li&gt;자동 입찰을 설정하여 제품 구매 등 중요한 행동을 취할 가능성이 높은 사람을 타게팅할 수 있다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;더 많은 Facebook 광고 도구 활용 &lt;ul&gt; &lt;li&gt;광고의 직접적인 성과를 확인하여 광고가 얼마나 성공적이었는지 파악 가능하며,&lt;br...</description>
        <pubDate>Fri, 17 Nov 2017 06:00:00 +0900</pubDate>
        <link>/facebookTagging/</link>
        <guid isPermaLink="true">/facebookTagging/</guid>
        
        <category>Facebook</category>
        
        <category>Tagging</category>
        
        <category>Pixel</category>
        
        <category>Event</category>
        
        
        <category>guide</category>
        
      </item>
    
      <item>
        <title>페이스북 마케팅 API 사용기</title>
        <description>&lt;h2 id=&quot;페이스북-개발자앱-생성-및-토큰-발급&quot;&gt;페이스북 개발자앱 생성 및 토큰 발급&lt;/h2&gt; &lt;p&gt;SDK 생성 및 토큰을 발급 받기위해서는 &lt;a href=&quot;https://developers.facebook.com/apps/&quot;&gt;페이스북 개발자센터-앱&lt;/a&gt; 에서&lt;br /&gt; 앱을 생성한 후 해당 앱을 통해 SDK 생성, API 버전 관리, 화이트리스트추가, 도메인관리, 비즈니스 관리자구성 등을 할 수 있다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/%E1%84%80%E1%85%A2%E1%84%87%E1%85%A1%E1%86%AF%E1%84%8C%E1%85%A1%E1%84%8B%E1%85%A2%E1%86%B82.jpg&quot; alt=&quot;개발자앱&quot; title=&quot;개발자앱&quot; /&gt;&lt;/p&gt; &lt;p&gt;그림)개발자앱&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;앱-제품구성&quot;&gt;앱 제품구성&lt;/h3&gt; &lt;p&gt;개발자앱에서는 체크된 제품을 사용중이다.&lt;br /&gt; &lt;em&gt;(더 많은 제품이 존재할 수 있다.)&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://s3.ap-northeast-2.amazonaws.com/thugstorage/images/post/%E1%84%8B%E1%85%A2%E1%86%B8%E1%84%8C%E1%85%A6%E1%84%91%E1%85%AE%E1%86%B7%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%87%E1%85%A9.png&quot; alt=&quot;제품구성&quot; title=&quot;구성&quot; /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;마케팅-api&quot;&gt;마케팅 API&lt;/h2&gt; &lt;p&gt;다양한 제품중 &lt;strong&gt;마케팅 API&lt;/strong&gt; 대해 &lt;del&gt;자세히&lt;/del&gt; 그냥 다뤄보겠다.&lt;/p&gt; &lt;h3 id=&quot;구성&quot;&gt;구성&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;대시보드 &lt;ul&gt; &lt;li&gt;API 호출/오류/오류율에 대한 인사이트&lt;/li&gt; &lt;li&gt;마케팅 API 사용정보&lt;/li&gt; &lt;li&gt;마케팅 API 오류 및 호출 통계&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;빠른 시작 &lt;ul&gt;...</description>
        <pubDate>Sat, 21 Oct 2017 19:00:40 +0900</pubDate>
        <link>/facebookAPI/</link>
        <guid isPermaLink="true">/facebookAPI/</guid>
        
        <category>Facebook</category>
        
        <category>GraphAPI</category>
        
        <category>Marketing</category>
        
        <category>FMP</category>
        
        
        <category>guide</category>
        
      </item>
    
  </channel>
</rss>
